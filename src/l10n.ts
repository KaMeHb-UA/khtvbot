function serializeForHTML(text: string) {
	return text.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;');
}

function fixChatId(chatId: number) {
	const str = chatId.toString();
	if (str.startsWith('-100')) {
		return Number(str.slice(4));
	}
	return chatId;
}

export const welcome = ({
	userId,
	userName,
	groupId,
	groupName,
	groupRulesMessageId,
}: {
	userId: number;
	userName: string;
	groupId: number;
	groupName: string;
	groupRulesMessageId: number;
}) => `
–ü—Ä–∏–≤—ñ—Ç, <a href="tg://user?id=${userId}">${serializeForHTML(userName)}</a>! –í—ñ—Ç–∞—î–º–æ –≤ <b>${serializeForHTML(groupName)}</b>.
–ü—Ä–æ—Å–∏–º–æ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ <a href="tg://privatepost?channel=${fixChatId(groupId)}&post=${groupRulesMessageId}">–ø—Ä–∞–≤–∏–ª–∞–º–∏ —á–∞—Ç—É</a>. –ú–æ–≤–∞ —á–∞—Ç—É ‚Äî —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞. –ó–∞ –º–æ–≤–æ—Å—Ä–∞—á—ñ –ø—Ä–∏–ª–µ—Ç–∏—Ç—å –±–∞–Ω.
–ü—Ä–∏—î–º–Ω–æ–≥–æ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è üòä
`;
